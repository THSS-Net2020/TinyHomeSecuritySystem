{"version":3,"sources":["config.js","utils/checkInstallation.js","utils/postWrapper.js","utils/verifyIdentity.js","icons/Webcam.js","components/Monitor.js","components/Index.js","components/ScanCamera.js","components/Install.js","components/Cameras.js","components/Video.js","utils/getServerOptions.js","components/AppMenu.js","components/Users.js","components/Login.js","index.js"],"names":["config","appName","server","checkInstallation","history","preventReinstall","fetch","then","res","json","installed","push","window","location","href","catch","err","postWrapper","payload","form","FormData","key","hasOwnProperty","append","verifyIdentity","uid","localStorage","getItem","authKey","method","body","data","code","WebCam","viewBox","version","xmlns","p-id","width","height","d","fill","Monitor","video","cameras","this","props","status","result","forEach","cam","className","name","ip","autoPlay","ref","style","id","controls","src","type","prevProps","prevState","snapshot","videojs","techOrder","flvjs","mediaDataSource","isLive","cors","withCredentials","display","show","onBack","parent","setState","showAll","title","background","renderScenes","PureComponent","Index","state","cameraStatus","getCameras","interval","clearInterval","getCamerasStatus","setInterval","item","address","online","onClick","watchVideo","undefined","renderCameras","Component","ScanCamera","subnet","existedCameras","addCameras","action","showManually","getCurrentCameras","length","cameraLists","onChange","nextState","selected","placeholder","console","log","message","error","items","document","querySelectorAll","postData","verdict","addr","querySelector","innerHTML","value","flag","info","newIP","ipInput","e","target","textAlign","margin","requestScan","renderCameraList","saveResult","border","visible","onOk","manuallyAdd","onCancel","Step","Steps","layout","labelCol","span","wrapperCol","Install","steps","currentStep","showWait","waitContent","step","domain","a","flvserver","setStep","username","password","setItem","tip","indicator","LoadingOutlined","fontSize","spin","current","map","onFinish","onAdminFinish","Item","label","rules","required","Password","htmlType","initialValues","guessStreamingServer","guessFlvServer","onStreamingFinish","color","Cameras","cameraList","updateCameraList","success","columns","dataIndex","render","text","record","deleteCamera","dataSource","Video","url","timeStr","match","params","updateTimeString","Date","Format","getServerOption","AppMenu","permission","confirm","removeItem","logOut","to","disabled","Option","Select","Users","usersList","updateUsersList","Number","deleteUser","renderUsersList","onAddUser","Login","onLogin","prototype","fmt","o","getMonth","getDate","getHours","getMinutes","getSeconds","Math","floor","getMilliseconds","k","test","replace","RegExp","$1","getFullYear","substr","ReactDOM","StrictMode","path","exact","component","getElementById"],"mappings":"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","file":"static/js/main.475e2d39.chunk.js","sourcesContent":["const config = {\n  appName: \"Tiny Home Security System\",\n  server: process.env.NODE_ENV === \"production\" ? \"\" : \"http://127.0.0.1:5000\"\n}\n\nexport default config;","import config from \"../config\";\n\nexport const checkInstallation = (history, preventReinstall = false) => {\n  fetch(`${config.server}/install/status`)\n    .then(res => res.json())\n    .then(res => {\n      if (!res.installed)\n        window.location.href = \"/installer\";\n      else if (preventReinstall)\n        history.push(\"/\");\n    })\n    .catch(err => {\n      history.push(\"/error/internal\");\n    });\n}\n\nexport default checkInstallation;\n","const postWrapper = (payload) => {\n  const form = new FormData();\n  for (const key in payload)\n    if (payload.hasOwnProperty(key))\n      form.append(key, payload[key]);\n  return form;\n};\n\nexport default postWrapper;","import postWrapper from \"./postWrapper\";\nimport config from \"../config\";\n\nconst verifyIdentity = (history) => {\n  const uid = localStorage.getItem(\"uid\"),\n    authKey = localStorage.getItem(\"authKey\"),\n    payload = postWrapper({ uid, authKey });\n\n  fetch(`${config.server}/api/users/verify`, {\n    method: \"POST\",\n    body: payload\n  })\n    .then(res => res.json())\n    .then(data => {\n      if (data.code !== 200)\n        window.location.href = \"/login\";\n    });\n};\n\nexport default verifyIdentity;\n","import React from \"react\";\n\nconst WebCam = () => (\n  <svg viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n       p-id=\"1169\" width=\"200\" height=\"200\">\n    <path\n      d=\"M778.666667 938.666667h-533.333334c-23.466667 0-38.4-25.6-27.733333-46.933334L277.333333 789.333333h469.333334l57.6 102.4c12.8 21.333333-2.133333 46.933333-25.6 46.933334z\"\n      fill=\"#455A64\" p-id=\"1170\"></path>\n    <path d=\"M512 490.666667m-384 0a384 384 0 1 0 768 0 384 384 0 1 0-768 0Z\" fill=\"#78909C\" p-id=\"1171\"></path>\n    <path d=\"M512 746.666667c-140.8 0-256-115.2-256-256s115.2-256 256-256 256 115.2 256 256-115.2 256-256 256z\"\n          fill=\"#455A64\" p-id=\"1172\"></path>\n    <path d=\"M512 490.666667m-192 0a192 192 0 1 0 384 0 192 192 0 1 0-384 0Z\" fill=\"#42A5F5\" p-id=\"1173\"></path>\n    <path\n      d=\"M614.4 426.666667c-25.6-29.866667-64-46.933333-102.4-46.933334s-76.8 17.066667-102.4 46.933334c-10.666667 10.666667-8.533333 27.733333 2.133333 38.4s27.733333 8.533333 38.4-2.133334c32-36.266667 91.733333-36.266667 123.733334 0 6.4 6.4 12.8 8.533333 21.333333 8.533334 6.4 0 12.8-2.133333 19.2-6.4 8.533333-8.533333 10.666667-27.733333 0-38.4z\"\n      fill=\"#90CAF9\" p-id=\"1174\"></path>\n  </svg>\n);\n\nexport default WebCam;","import React, {PureComponent} from \"react\";\nimport {PageHeader} from \"antd\";\n\nimport \"../styles/Monitor.styl\";\n\nexport default class Monitor extends PureComponent {\n  video = {}\n\n  renderScenes() {\n    const cameras = this.props.cameras,\n      status = this.props.status;\n    const result = [];\n    cameras.forEach((cam, key) => {\n      result.push(\n        <div key={key} className={\"monitor-item\"}>\n          <div className={\"item-title\"}>\n            {cam.name}\n          </div>\n          {status[cam.ip] && (<div className={\"item-container\"}>\n            <video width={360} height={270} autoPlay={\"autoplay\"} ref={ref => this.video[cam.name] = ref} style={{width: '100%'}}\n                   id={cam.name}\n                   className=\"player video-js vjs-default-skin\" controls>\n              <source src={`${localStorage.getItem(\"flv_server\")}/${cam.name}.flv`} type='video/x-flv'/>\n            </video>\n          </div>)}\n          {!status[cam.ip] && (\n            <div className={\"item-container\"}>\n              <p>摄像头离线。</p>\n            </div>\n          )}\n        </div>\n      );\n    });\n\n    return result;\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    const videojs = window.videojs;\n    this.props.cameras.forEach((cam) => {\n      if (!this.props.status[cam.ip])\n        return;\n      videojs(cam.name, {\n        techOrder: ['html5', 'flvjs'],\n        flvjs: {\n          mediaDataSource: {\n            isLive: true,\n            cors: true,\n            withCredentials: false,\n          }\n        }\n      });\n    });\n  }\n\n  render()\n    {\n      return (\n        <div className={\"monitor-mode\"} style={{display: this.props.show ? \"block\" : \"none\"}}>\n          <PageHeader\n            className=\"site-page-header\"\n            onBack={() => this.props.parent.setState({showAll: false})}\n            title=\"所有画面\"\n            style={{background: '#fff'}}\n          />\n          <div className={\"monitor-items\"}>\n            {this.renderScenes()}\n          </div>\n        </div>\n      )\n    }\n  }\n","import React, { Component } from \"react\";\n\nimport config from \"../config\";\nimport checkInstallation from \"../utils/checkInstallation\";\nimport verifyIdentity from \"../utils/verifyIdentity\";\n\nimport \"../styles/Index.styl\";\nimport postWrapper from \"../utils/postWrapper\";\nimport WebCam from \"../icons/Webcam\";\nimport Monitor from \"./Monitor\";\nimport {Button} from \"antd\";\n\nexport default class Index extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cameras: [],\n      cameraStatus: {},\n      showAll: false\n    };\n  }\n\n  componentDidMount() {\n    checkInstallation(this.props.history);\n    verifyIdentity(this.props.history);\n\n    this.getCameras();\n  }\n\n  componentWillUnmount() {\n    if (this.interval)\n      clearInterval(this.interval);\n  }\n\n  getCameras() {\n    const uid = localStorage.getItem(\"uid\"), authKey = localStorage.getItem(\"authKey\");\n    fetch(`${config.server}/api/camera/get`, {\n      method: \"POST\",\n      body: postWrapper({ uid, authKey })\n    })\n      .then(res => res.json())\n      .then(data => {\n        this.setState({ cameras: data.payload });\n        this.payload = data.payload;\n        this.getCamerasStatus(data.payload);\n        setInterval(() => this.getCamerasStatus(this.payload), 10000);\n      });\n  }\n\n  async getCamerasStatus(payload) {\n    const result = {};\n    for (const item of payload) {\n      const uid = localStorage.getItem(\"uid\"),\n        authKey = localStorage.getItem(\"authKey\"),\n        address = item.ip;\n\n      await fetch(`${config.server}/api/camera/status`, {\n        method: \"post\",\n        body: postWrapper({ uid, authKey, address })\n      })\n        .then(res => res.json())\n        .then(data => {\n          result[address] = data.online;\n        });\n    }\n    this.setState({\n      cameraStatus: result\n    })\n  }\n\n  watchVideo(id) {\n    window.location.href = '/app/video/' + id;\n  }\n\n  renderCameras() {\n    const result = [];\n    this.state.cameras.forEach(cam => {\n      result.push(\n        <div\n          key={cam.name}\n          onClick={() => this.state.cameraStatus[cam.ip] ? this.watchVideo(cam.name) : null}\n          className={`index-camera-item ${this.state.cameraStatus[cam.ip] ? \"online\" :\n            this.state.cameraStatus[cam.ip] === undefined ? \"unkonwn\" : \"offline\"}`}>\n          <div className={\"index-camera-icon\"}>\n            <WebCam/>\n          </div>\n          <div className={\"index-camera-info\"}>\n            <p className={\"index-camera-name\"}>{cam.name}</p>\n            <p className={\"index-camera-address\"}>{cam.ip}</p>\n            <div\n              className={`index-camera-status ${this.state.cameraStatus[cam.ip] ? \"online\" :\n                this.state.cameraStatus[cam.ip] === undefined ? \"unkonwn\" : \"offline\"}`}\n              title={`${this.state.cameraStatus[cam.ip] ? \"摄像头在线\" : \"摄像头离线\"}`}\n            >\n            </div>\n          </div>\n        </div>\n      );\n    });\n    return result;\n  }\n\n  render() {\n    return (\n      <div className={\"app-index\"}>\n        {this.state.showAll && <Monitor\n          show={this.state.showAll}\n          cameras={this.state.cameras}\n          status={this.state.cameraStatus}\n          parent={this}\n        />}\n        <h3 className={\"part-title\"}>摄像头列表</h3>\n        <div className={\"index-cameras-list\"}>\n          {this.renderCameras()}\n        </div>\n\n        <h3 className={\"part-title\"}>监视模式</h3>\n        <Button type={\"primary\"} onClick={() => this.setState({ showAll: true })}>\n          打开监视页面，显示所有摄像头画面\n        </Button>\n      </div>\n    );\n  }\n}","import React, {Component} from \"react\";\nimport {Input, Button, message, Switch, Modal} from \"antd\";\n\nimport \"../styles/ScanCamera.styl\"\nimport config from \"../config\";\nimport postWrapper from \"../utils/postWrapper\";\nimport WebCam from \"../icons/Webcam\";\n\n\nexport default class ScanCamera extends Component {\n  subnet = \"\";\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      cameras: [],\n      existedCameras: {},\n      addCameras: {},\n      action: 'idle',\n      showManually: false\n    };\n  }\n\n  componentDidMount() {\n    this.getCurrentCameras();\n  }\n\n  // 显示摄像头列表\n  renderCameraList() {\n    const {cameras, action} = this.state;\n    if (action === \"idle\") {\n      return (\n        <div className={\"list-prompt\"}>\n          等待扫描...\n        </div>\n      );\n    }\n    if (action === \"scan\") {\n      return (\n        <div className={\"list-prompt\"}>\n          正在扫描，请等待...\n        </div>\n      );\n    }\n    if (!cameras.length) {\n      return (\n        <div className={\"list-prompt\"}>\n          找不到摄像头...\n        </div>\n      );\n    }\n    const cameraLists = [];\n    this.state.cameras.forEach(cam => {\n      if (this.state.existedCameras.hasOwnProperty(cam))\n        return;\n      cameraLists.push(\n        <div key={cam} className={`camera-item-card ${this.state.addCameras[cam] ? \"selected\" : \"\"}`}>\n          <div className={\"camera-item-icons\"}>\n            <WebCam/>\n          </div>\n          <div className={\"camera-info\"}>\n            <Switch onChange={() => {\n              const nextState = this.state.addCameras;\n              if (this.state.addCameras[cam])\n                delete nextState[cam];\n              else\n                nextState[cam] = {\n                  selected: true,\n                  ip: cam\n                };\n              this.setState({\n                addCameras: nextState\n              });\n            }} className={\"camera-switch\"}/>\n            <p className={\"camera-item-address\"}>\n              {cam}\n            </p>\n            <p className={\"camera-item-type\"}>\n              ESP32\n            </p>\n            <input type={\"text\"} className={\"camera-item-name\"} placeholder={\"为这个摄像头取一个名字..\"}/>\n          </div>\n        </div>\n      )\n    });\n    return cameraLists;\n  }\n\n  // 获取已存在的摄像头信息\n  getCurrentCameras() {\n    const uid = localStorage.getItem(\"uid\"),\n      authKey = localStorage.getItem(\"authKey\"),\n      payload = postWrapper({uid, authKey});\n\n    fetch(`${config.server}/api/camera/get`, {\n      method: 'POST',\n      body: payload\n    })\n      .then(res => res.json())\n      .then(data => {\n        const existedCameras = {};\n        data.payload.forEach(cam => existedCameras[cam.id] = true);\n        this.setState({\n          existedCameras\n        });\n      });\n  }\n\n  requestScan() {\n    const subnet = this.subnet,\n      uid = localStorage.getItem(\"uid\"),\n      authKey = localStorage.getItem(\"authKey\"),\n      payload = postWrapper({\n        subnet, uid, authKey\n      });\n    if (!subnet.length) {\n      message.error(\"扫描的网段不能为空！\");\n      return;\n    }\n\n    this.setState({\n      action: \"scan\"\n    }, () => {\n      fetch(`${config.server}/api/camera/scan`, {\n        method: \"POST\",\n        body: payload\n      })\n        .then(res => res.json())\n        .then(data => {\n          console.log(data);\n          this.setState({\n            action: \"done\",\n            cameras: data.payload\n          });\n        });\n    });\n  }\n\n  saveResult() {\n    const items = document.querySelectorAll(\".camera-lists .camera-item-card\");\n    const postData = [];\n    let verdict = true;\n    items.forEach(item => {\n      if (!verdict)\n        return;\n      const addr = item.querySelector(\".camera-item-address\").innerHTML,\n        name = item.querySelector(\".camera-item-name\").value;\n      if (!this.state.addCameras[addr])\n        return;\n      if (!name.length) {\n        verdict = false;\n        message.error(\"摄像头标识符名称不能为空！\");\n        return;\n      }\n      postData.push({\n        addr,\n        name\n      });\n    });\n\n    if (!verdict)\n      return;\n\n    let flag = true;\n    postData.forEach(item => {\n      const uid = localStorage.getItem(\"uid\"),\n        authKey = localStorage.getItem(\"authKey\"),\n        name = item.name,\n        ip = item.addr,\n        payload = postWrapper({uid, authKey, name, ip});\n      fetch(`${config.server}/api/camera/add`, {\n        method: \"post\",\n        body: payload\n      })\n        .then(res => res.json())\n        .then(data => {\n          if (data.status === \"failed\") {\n            flag = false;\n            message.error(`添加 ${item.addr} 失败！`);\n          }\n        });\n    });\n\n    if (flag)\n      message.info(\"正在保存...\");\n  }\n\n  manuallyAdd() {\n    const newIP = this.ipInput.value;\n    this.setState({\n      cameras: [...this.state.cameras, newIP],\n      action: \"done\",\n      showManually: false\n    });\n  }\n\n  render() {\n    return (\n      <div className={\"scan-web-camera\"}>\n        <h3 className={\"part-title\"}>添加摄像头</h3>\n        <p>设置网段</p>\n        <Input\n          type={\"text\"}\n          placeholder={\"设置扫描摄像头的网段，如 192.168.1.0/24\"}\n          onChange={e => this.subnet = e.target.value}\n        />\n\n        <p style={{textAlign: 'right', margin: '10px 0px'}}>\n          <Button onClick={() => this.requestScan()} type={\"primary\"}>扫描</Button>\n        </p>\n\n        <div className={\"camera-lists\"}>\n          {this.renderCameraList()}\n        </div>\n\n        <div className={\"buttons-action\"} style={{textAlign: \"center\"}}>\n          <Button\n            onClick={() => this.saveResult()}\n            style={{background: '#95de64', border: 0, margin: \"0 20px\"}}\n            type={\"primary\"}>\n            保存\n          </Button>\n\n          <Modal title=\"手动添加\" visible={this.state.showManually} onOk={() => this.manuallyAdd()}\n                 onCancel={() => this.setState({showManually: false})}>\n            <input style={{ width: '100%' }} ref={ref => this.ipInput = ref} placeholder={\"手动输入 IP...\"} />\n          </Modal>\n\n          <Button\n            onClick={() => this.setState({showManually: true})}>\n            手动添加\n          </Button>\n        </div>\n      </div>\n    )\n  }\n}","import React, {Component} from \"react\";\nimport {Steps, Button, Form, Input, Spin, message} from \"antd\";\nimport {LoadingOutlined} from '@ant-design/icons';\nimport postWrapper from \"../utils/postWrapper\";\n\nimport config from \"../config\";\nimport ScanCamera from \"./ScanCamera\";\n\n\nimport \"../styles/Install.styl\";\n\nconst {Step} = Steps;\n\nconst layout = {\n  labelCol: {span: 6},\n  wrapperCol: {span: 16},\n};\n\nexport default class Install extends Component {\n  steps = [\n    {title: \"设置管理员账号\"},\n    {title: \"设置推流服务器\"},\n    {title: \"添加网络摄像头\"},\n    {title: \"完成安装\"}\n  ]\n\n  componentDidMount() {\n    fetch(`${config.server}/install/status`)\n      .then(res => res.json())\n      .then(res => {\n        if (res.installed)\n          this.props.history.push('/');\n      })\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentStep: 0,\n      showWait: false,\n      waitContent: \"\",\n      cameras: []\n    };\n  }\n\n  setStep(step) {\n    this.setState({\n      currentStep: step,\n      showWait: false\n    });\n  }\n\n  guessStreamingServer() {\n    return `rtmp://${document.domain}/live`;\n  }\n\n  guessFlvServer() {\n    return `http://${document.domain}:5002/live`;\n  }\n\n  onStreamingFinish(data) {\n    const ref = data;\n    this.setState({\n      showWait: true,\n      waitContent: \"正在保存设置...\"\n    }, async () => {\n      let uid = localStorage.getItem(\"uid\"),\n        authKey = localStorage.getItem(\"authKey\"),\n        name = \"streaming_server\",\n        value = ref.server;\n\n      await fetch(`${config.server}/api/option/set`, {\n        method: \"post\",\n        body: postWrapper({ uid, authKey, name, value })\n      })\n        .then(res => res.json())\n        .then(data => {\n          if (data.status === \"failed\")\n            message.error(\"设置推流服务器失败!\");\n        });\n\n      name = \"flv_server\";\n      value = ref.flvserver;\n\n      await fetch(`${config.server}/api/option/set`, {\n        method: \"post\",\n        body: postWrapper({ uid, authKey, name, value })\n      })\n        .then(res => res.json())\n        .then(data => {\n          if (data.status === \"failed\")\n            message.error(\"设置 FLV 服务器失败!\");\n          this.setStep(2);\n        });\n    })\n  }\n\n  onAdminFinish(data) {\n    const ref = data;\n\n    this.setState({\n      showWait: true,\n      waitContent: \"正在新建用户..\"\n    }, () => {\n      const form = new FormData();\n      form.append(\"admin_username\", data.username);\n      form.append(\"admin_password\", data.password);\n\n      // 发送 install 请求\n      fetch(`${config.server}/install/install`, {\n        method: \"POST\",\n        body: form\n      })\n        .then(res => res.json())\n        .then(data => {\n          if (data.status !== \"success\")\n            return false;\n          // 安装成功后登录\n          fetch(`${config.server}/api/user/login`, {\n            method: \"post\",\n            body: postWrapper({\n              username: ref.username,\n              password: ref.password\n            })\n          })\n            .then(res => res.json())\n            .then(data => {\n              // 保存登录状态，进入下一步\n              localStorage.setItem(\"uid\", data.uid);\n              localStorage.setItem(\"authKey\", data.authKey);\n\n              this.setState({\n                currentStep: 1,\n                showWait: false\n              });\n            })\n        })\n    });\n  }\n\n  render() {\n    return (\n      <div className={\"installer\"}>\n        {this.state.showWait && (\n          <div className={\"wait-page\"}>\n            <Spin\n              tip={this.state.waitContent}\n              indicator={<LoadingOutlined style={{fontSize: 80, margin: \"10px 0\"}} spin/>}\n            />\n          </div>\n        )}\n\n        <div className={`container installer-container ${this.state.showWait ? \"blur\" : \"\"}`}>\n          <h1 className={\"page-title\"}>\n            安装向导\n          </h1>\n          <p className={\"page-description\"}>\n            初次使用 {config.appName}， 需要设置管理员账户和推流服务器。\n          </p>\n\n          <Steps current={this.state.currentStep}>\n            {this.steps.map(item => (\n              <Step key={item.title} title={item.title}/>\n            ))}\n          </Steps>\n\n          {this.state.currentStep === 0 && (\n            <div className={\"install-step\"}>\n              <Form\n                {...layout}\n                name=\"admin\"\n                onFinish={(data) => this.onAdminFinish(data)}\n              >\n                <Form.Item\n                  label=\"管理员用户名\"\n                  name=\"username\"\n                  rules={[{required: true, message: '需要设置一个用户名。'}]}\n                >\n                  <Input/>\n                </Form.Item>\n\n                <Form.Item\n                  label=\"管理员密码\"\n                  name=\"password\"\n                  rules={[{required: true, message: '需要设置一个密码。'}]}\n                >\n                  <Input.Password/>\n                </Form.Item>\n                <div style={{textAlign: 'center'}}>\n                  <Button type=\"primary\" htmlType=\"submit\">\n                    下一步\n                  </Button>\n                </div>\n              </Form>\n            </div>\n          )}\n\n          {this.state.currentStep === 2 && (\n            <div className={\"install-step\"}>\n              <ScanCamera/>\n              <div style={{textAlign: 'center'}}>\n                <Button onClick={() => this.setStep(0)}>\n                  上一步\n                </Button>\n                <Button type=\"primary\" onClick={() => this.setStep(3)}>\n                  完成\n                </Button>\n              </div>\n            </div>\n          )}\n\n          {this.state.currentStep === 1 && (\n            <div className={\"install-step\"}>\n              <Form\n                {...layout}\n                name=\"streaming\"\n                initialValues={{\n                  server: this.guessStreamingServer(),\n                  flvserver: this.guessFlvServer()\n                }}\n                onFinish={(data) => this.onStreamingFinish(data)}\n              >\n                <Form.Item\n                  label=\"推流服务器\"\n                  name=\"server\"\n                  rules={[{required: true, message: '需要填写推流服务器'}]}\n                >\n                  <Input/>\n                </Form.Item>\n\n                <p style={{ color: '#999' }}>\n                  设置 RTMP 协议推流服务器，一般是形如 rtmp://&lt;domain&gt;/live 的形式。如果自动检测的值不正确，请自行更正。\n                </p>\n\n                <Form.Item\n                  label=\"推流服务器\"\n                  name=\"flvserver\"\n                  rules={[{required: true, message: '需要填写播放服务器'}]}\n                >\n                  <Input/>\n                </Form.Item>\n                <p style={{ color: '#999' }}>\n                  设置 FLV 播放源，一般是形如 http://&lt;domain:port&gt;/live 的形式。如果自动检测的值不正确，请自行更正。\n                </p>\n\n\n                <div style={{textAlign: 'center'}}>\n                  <Button onClick={() => this.setStep(1)}>\n                    上一步\n                  </Button>\n                  <Button type=\"primary\" htmlType=\"submit\">\n                    下一步\n                  </Button>\n                </div>\n              </Form>\n            </div>\n          )}\n\n          {this.state.currentStep === 3 && (\n            <div className={\"install-step\"}>\n              <p>你已经完成了 {config.appName} 的安装！现在可以开始使用了！</p>\n              <p style={{ textAlign: 'center' }}>\n                <Button onClick={() => this.props.history.push(\"/app/index\")} type={\"primary\"}>进入主界面</Button>\n              </p>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}","import React, { Component } from \"react\";\nimport ScanCamera from \"./ScanCamera\";\nimport {Button, message, Table} from \"antd\";\nimport config from \"../config\";\nimport postWrapper from \"../utils/postWrapper\";\n\n\nexport default class Cameras extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cameraList: []\n    };\n  }\n\n  componentDidMount() {\n    this.updateCameraList();\n  }\n\n  updateCameraList() {\n    fetch(`${config.server}/api/camera/get`, {\n      method: \"post\",\n      body: postWrapper({\n        uid: localStorage.getItem(\"uid\"),\n        authKey: localStorage.getItem(\"authKey\")\n      })\n    })\n      .then(res => res.json())\n      .then(data => {\n        console.log(data.payload);\n        this.setState({\n          cameraList: data.payload\n        })\n      });\n  }\n\n  deleteCamera(target) {\n    fetch(`${config.server}/api/camera/delete`, {\n      method: \"post\",\n      body: postWrapper({\n        uid: localStorage.getItem(\"uid\"),\n        authKey: localStorage.getItem(\"authKey\"),\n        target\n      })\n    })\n      .then(res => res.json())\n      .then(data => {\n        if (data.status)\n          message.success(\"删除摄像头成功。你可能需要重启服务器以使改动生效。\");\n        else\n          message.error(\"删除摄像头失败。\");\n        this.updateCameraList();\n      })\n  }\n\n  renderCameraList() {\n    if (this.state.cameraList.length === 0)\n      return null;\n    const columns = [\n      {\n        title: \"ID\",\n        dataIndex: \"id\",\n        key: \"id\"\n      },\n      {\n        title: \"摄像头名称\",\n        dataIndex: \"name\",\n        key: \"name\"\n      },\n      {\n        title: \"摄像头网络地址\",\n        dataIndex: \"ip\",\n        key: \"ip\",\n      },\n      {\n        title: \"操作\",\n        key: \"action\",\n        render: (text, record) => {\n          return (\n            <Button\n              onClick={() => this.deleteCamera(record.id)}\n              type={\"link\"}>\n              删除摄像头\n            </Button>\n          );\n        }\n      }\n    ];\n    return <Table dataSource={this.state.cameraList} columns={columns}/>;\n  }\n\n  render() {\n    return (\n      <div className={\"cameras\"}>\n        <h3 className={\"part-title\"}>\n          摄像头列表\n        </h3>\n        {this.renderCameraList()}\n        <ScanCamera />\n      </div>\n    )\n  }\n}","import React, {Component} from \"react\";\nimport checkInstallation from \"../utils/checkInstallation\";\nimport verifyIdentity from \"../utils/verifyIdentity\";\nimport \"../styles/Video.styl\";\n\nexport default class Video extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      url: \"\",\n      name: \"\",\n      timeStr: \"\"\n    };\n  }\n\n  componentDidMount() {\n    checkInstallation(this.props.history);\n    verifyIdentity(this.props.history);\n\n    const id = this.props.match.params.id;\n    if (!id)\n      return;\n    this.setState({\n      url: `${localStorage.getItem(\"flv_server\")}/${id}.flv`,\n      name: id\n    }, () => {\n      const videojs = window.videojs;\n      videojs('videojs-flvjs-player', {\n        techOrder: ['html5', 'flvjs'],\n        flvjs: {\n          mediaDataSource: {\n            isLive: true,\n            cors: true,\n            withCredentials: false,\n          }\n        }\n      });\n    });\n\n    this.interval = setInterval(() => this.updateTimeString(), 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  updateTimeString() {\n    const timeStr = `[${this.state.name}] ${new Date().Format(\"yyyy-MM-dd HH:mm:ss\")}`;\n    this.setState({\n      timeStr\n    });\n  }\n\n  render() {\n    return (\n      <div className={\"video\"}>\n        <div className={\"video-container\"}>\n          <video autoPlay={\"autoplay\"} ref={ref => this.video = ref} style={{width: '100%'}} id=\"videojs-flvjs-player\"\n                 className=\"player video-js vjs-default-skin\" controls>\n            <source src={this.state.url} type='video/x-flv'/>\n          </video>\n          <div className={\"video-tag\"}>\n            {this.state.timeStr}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import config from \"../config\";\nimport postWrapper from \"./postWrapper\";\n\nconst getServerOption = (name) => {\n  fetch(`${config.server}/api/option/get`, {\n    method: \"post\",\n    body: postWrapper({\n      uid: localStorage.getItem(\"uid\"),\n      authKey: localStorage.getItem(\"authKey\"),\n      name\n    })\n  })\n    .then(res => res.json())\n    .then(data => {\n      if (data.status === \"success\")\n        localStorage.setItem(name, data.value);\n    });\n};\n\nexport default getServerOption;\n","import React, { Component } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { Button } from \"antd\";\n\nimport \"../styles/AppMenu.styl\";\nimport config from \"../config\";\nimport postWrapper from \"../utils/postWrapper\";\nimport verifyIdentity from \"../utils/verifyIdentity\";\nimport checkInstallation from \"../utils/checkInstallation\";\nimport getServerOption from \"../utils/getServerOptions\";\n\nexport default class AppMenu extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      permission: 0\n    };\n  }\n\n  componentDidMount() {\n    checkInstallation(this.props.history);\n    verifyIdentity(this.props.history);\n    getServerOption(\"flv_server\");\n\n    fetch(`${config.server}/api/users/info`, {\n      method: \"post\",\n      body: postWrapper({\n        uid: localStorage.getItem(\"uid\"),\n        authKey: localStorage.getItem(\"authKey\")\n      })\n    })\n      .then(res => res.json())\n      .then(data => {\n        localStorage.setItem(\"username\", data.payload.name);\n        localStorage.setItem(\"permission\", data.payload.permission);\n        this.setState({\n          username: data.payload.name,\n          permission: data.payload.permission\n        })\n      })\n        .catch(e => console.error(e));\n  }\n\n  logOut() {\n    // eslint-disable-next-line\n    if (confirm(\"要退出当前用户吗？\")) {\n      localStorage.removeItem(\"uid\");\n      localStorage.removeItem(\"authKey\");\n      localStorage.removeItem(\"username\");\n      localStorage.removeItem(\"permission\");\n      this.props.history.push(\"/login\");\n    }\n  }\n\n  render() {\n    return (\n      <div className={\"app-menu\"}>\n        <h1 className={\"app-name\"}>{config.appName}</h1>\n        <Button onClick={() => this.logOut()} type={\"link\"} className={\"current-user\"}>{this.state.username}</Button>\n        <div className={\"navlinks\"}>\n          <NavLink to={\"/app/index\"}>概览</NavLink>\n          <NavLink\n            disabled\n            style={{ color: '#000' }}\n            to={\"/app/video\"}>\n            监控视频\n          </NavLink>\n          {this.state.permission >= 1 && (<NavLink to={\"/app/users\"}>用户</NavLink>)}\n          {this.state.permission >= 1 && (<NavLink to={\"/app/cameras\"}>摄像头</NavLink>)}\n        </div>\n      </div>\n    );\n  }\n}","import React, {Component} from \"react\";\nimport config from \"../config\";\nimport postWrapper from \"../utils/postWrapper\";\nimport {Button, Form, Input, Table, Select, message} from \"antd\";\n\nconst layout = {\n  labelCol: {span: 6},\n  wrapperCol: {span: 16},\n};\n\nconst { Option } = Select;\n\nexport default class Users extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      usersList: []\n    }\n  }\n\n  componentDidMount() {\n    this.updateUsersList();\n  }\n\n  updateUsersList() {\n    fetch(`${config.server}/api/users/all`, {\n      method: \"post\",\n      body: postWrapper({\n        uid: localStorage.getItem(\"uid\"),\n        authKey: localStorage.getItem(\"authKey\")\n      })\n    })\n      .then(res => res.json())\n      .then(data => {\n        this.setState({\n          usersList: data.payload\n        })\n      });\n  }\n\n  renderUsersList() {\n    if (this.state.usersList.length === 0)\n      return null;\n    const columns = [\n      {\n        title: \"ID\",\n        dataIndex: \"uid\",\n        key: \"uid\"\n      },\n      {\n        title: \"用户名\",\n        dataIndex: \"username\",\n        key: \"username\"\n      },\n      {\n        title: \"权限\",\n        dataIndex: \"permission\",\n        key: \"permission\",\n        render: (value) => {\n          if (value === 0)\n            return \"普通用户\";\n          if (value === 1)\n            return \"管理员\";\n          if (value ===2 )\n            return \"超级管理员\";\n        }\n      },\n      {\n        title: \"操作\",\n        key: \"action\",\n        render: (text, record) => {\n          return (\n            <Button\n              disabled={Number(record.uid) === Number(localStorage.getItem(\"uid\"))}\n              onClick={() => this.deleteUser(record.uid)}\n              type={\"link\"}>\n              删除用户\n            </Button>\n          );\n        }\n      }\n    ];\n    return <Table dataSource={this.state.usersList} columns={columns}/>;\n  }\n\n  deleteUser(target) {\n    // eslint-disable-next-line\n    if (confirm(\"确定要删除该用户吗？\")) {\n      const uid = localStorage.getItem(\"uid\"),\n        authKey = localStorage.getItem(\"authKey\");\n      fetch(`${config.server}/api/users/delete`, {\n        method: \"post\",\n        body: postWrapper({uid, authKey, target})\n      })\n        .then(res => res.json())\n        .then(data => {\n          if (data.status === \"success\")\n            message.success(\"用户已删除。\");\n          else\n            message.error(\"用户删除失败。\");\n          this.updateUsersList();\n        });\n    }\n  }\n\n  onAddUser(data) {\n    const username = data.username,\n      password = data.password,\n      permission = data.permission,\n      uid = localStorage.getItem(\"uid\"),\n      authKey = localStorage.getItem(\"authKey\");\n    fetch(`${config.server}/api/users/add`, {\n      method: \"post\",\n      body: postWrapper({ username, password, permission, uid, authKey })\n    })\n      .then(res => res.json())\n      .then(data => {\n        if (data.status === \"success\") {\n          message.success(\"添加新用户成功！\");\n          this.updateUsersList();\n        }\n        else {\n          message.error(\"添加新用户失败。\");\n        }\n      });\n  }\n\n  render() {\n    return (\n      <div className={\"users\"}>\n        <h3 className={\"part-title\"}>\n          用户列表\n        </h3>\n        {this.renderUsersList()}\n\n        <h3 className={\"part-title\"}>\n          添加用户\n        </h3>\n        <Form\n          {...layout}\n          initialValues={{\n            permission: \"0\"\n          }}\n          name=\"admin\"\n          onFinish={(data) => this.onAddUser(data)}\n        >\n          <Form.Item\n            label=\"用户名\"\n            name=\"username\"\n            rules={[{required: true, message: '需要设置一个用户名。'}]}\n          >\n            <Input/>\n          </Form.Item>\n\n          <Form.Item\n            label=\"密码\"\n            name=\"password\"\n            rules={[{required: true, message: '需要设置一个密码。'}]}\n          >\n            <Input.Password/>\n          </Form.Item>\n\n          <Form.Item\n            label=\"权限\"\n            name=\"permission\"\n            rules={[{required: true, message: '需要指定用户权限。'}]}\n          >\n            <Select>\n              <Option value=\"0\">普通用户</Option>\n              <Option value=\"1\">管理员</Option>\n            </Select>\n          </Form.Item>\n          <div style={{textAlign: 'center'}}>\n            <Button type=\"primary\" htmlType=\"submit\">\n              新建用户\n            </Button>\n          </div>\n        </Form>\n      </div>\n    );\n  }\n}","import React, { Component } from \"react\";\n\nimport \"../styles/Login.styl\";\nimport config from \"../config\";\nimport {Button, Form, Input, message} from \"antd\";\nimport postWrapper from \"../utils/postWrapper\";\nimport checkInstallation from \"../utils/checkInstallation\";\n\nconst layout = {\n  labelCol: {span: 4},\n  wrapperCol: {span: 16},\n};\n\nexport default class Login extends Component {\n  componentDidMount() {\n    checkInstallation(this.props.history);\n  }\n\n  onLogin(data) {\n    fetch(`${config.server}/api/user/login`, {\n      method: \"post\",\n      body: postWrapper({\n        username: data.username,\n        password: data.password\n      })\n    })\n      .then(res => res.json())\n      .then(data => {\n        if (data.status === \"success\") {\n          message.success(\"登录成功！\");\n          localStorage.setItem(\"uid\", data.uid);\n          localStorage.setItem(\"authKey\", data.authKey);\n          this.props.history.push(\"/app/index\");\n        }\n        else {\n          message.error(\"登录失败，请检查用户名或密码。\");\n        }\n      })\n  }\n\n  render() {\n    return (\n      <div className={\"login-page\"}>\n        <div className={\"container\"}>\n          <h1 className={\"app-title\"}>\n            {config.appName}\n          </h1>\n          <h2 className={\"action-title\"}>\n            登录系统\n          </h2>\n\n          <Form\n            {...layout}\n            initialValues={{\n              permission: \"0\"\n            }}\n            name=\"admin\"\n            onFinish={(data) => this.onLogin(data)}\n          >\n            <Form.Item\n              label=\"用户名\"\n              name=\"username\"\n              rules={[{required: true, message: '需要输入用户名。'}]}\n            >\n              <Input/>\n            </Form.Item>\n\n            <Form.Item\n              label=\"密码\"\n              name=\"password\"\n              rules={[{required: true, message: '需要输入密码。'}]}\n            >\n              <Input.Password/>\n            </Form.Item>\n\n            <div style={{textAlign: 'center'}}>\n              <Button type=\"primary\" htmlType=\"submit\">\n                登录\n              </Button>\n            </div>\n          </Form>\n\n        </div>\n      </div>\n    );\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter, Route, Redirect} from 'react-router-dom';\n\nimport Index from \"./components/Index\";\nimport Install from \"./components/Install\";\nimport Cameras from \"./components/Cameras\";\n\nimport \"antd/dist/antd.min.css\";\nimport \"./styles/App.styl\";\nimport Video from \"./components/Video\";\nimport AppMenu from \"./components/AppMenu\";\nimport Users from \"./components/Users\";\nimport Login from \"./components/Login\";\n\n\n// eslint-disable-next-line\nDate.prototype.Format = function (fmt) {\n  const o = {\n    \"M+\": this.getMonth() + 1, //月份\n    \"d+\": this.getDate(), //日\n    \"H+\": this.getHours(), //小时\n    \"m+\": this.getMinutes(), //分\n    \"s+\": this.getSeconds(), //秒\n    \"q+\": Math.floor((this.getMonth() + 3) / 3), //季度\n    \"S\": this.getMilliseconds() //毫秒\n  };\n  if (/(y+)/.test(fmt))\n    fmt = fmt.replace(RegExp.$1, (this.getFullYear() + \"\").substr(4 - RegExp.$1.length));\n  for (var k in o)\n    if (new RegExp(\"(\" + k + \")\").test(fmt))\n      fmt = fmt.replace(RegExp.$1, (RegExp.$1.length === 1) ? (o[k]) : ((\"00\" + o[k]).substr((\"\" + o[k]).length)));\n  return fmt;\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <div className=\"homesec-app\">\n      <BrowserRouter>\n        <Route path=\"/\" exact>\n          <Redirect to={\"/app/index\"} />\n        </Route>\n        <Route path={\"/app\"}>\n          <div className={\"container\"}>\n            <Route path={\"/app\"} component={AppMenu} />\n            <Route path={\"/app/index\"} exact component={Index}/>\n            <Route path={\"/app/video/:id\"} exact component={Video}/>\n            <Route path={\"/app/cameras\"} exact component={Cameras} />\n            <Route path={\"/app/users\"} exact component={Users} />\n          </div>\n        </Route>\n        <Route path={\"/login\"} exact component={Login} />\n        <Route path={\"/installer\"} exact component={Install}/>\n      </BrowserRouter>\n    </div>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}